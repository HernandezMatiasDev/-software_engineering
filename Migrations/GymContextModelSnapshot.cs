// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuMejorPeso.Models;

#nullable disable

namespace SuMejorPeso.Migrations
{
    [DbContext(typeof(GymContext))]
    partial class GymContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ClassroomCoach", b =>
                {
                    b.Property<int>("classroomsid")
                        .HasColumnType("int");

                    b.Property<int>("coachesid")
                        .HasColumnType("int");

                    b.HasKey("classroomsid", "coachesid");

                    b.HasIndex("coachesid");

                    b.ToTable("ClassroomCoach");
                });

            modelBuilder.Entity("ClassroomMember", b =>
                {
                    b.Property<int>("classroomsid")
                        .HasColumnType("int");

                    b.Property<int>("membersid")
                        .HasColumnType("int");

                    b.HasKey("classroomsid", "membersid");

                    b.HasIndex("membersid");

                    b.ToTable("ClassroomMembers", (string)null);
                });

            modelBuilder.Entity("CoachSpecialty", b =>
                {
                    b.Property<int>("coachesid")
                        .HasColumnType("int");

                    b.Property<int>("specialtiesid")
                        .HasColumnType("int");

                    b.HasKey("coachesid", "specialtiesid");

                    b.HasIndex("specialtiesid");

                    b.ToTable("CoachSpecialty");
                });

            modelBuilder.Entity("SuMejorPeso.Models.ActivityRecord", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("action")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.ToTable("ActivityRecord");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Assignment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("difficulty")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("durationMinutes")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Assignment");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Attendance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Memberid")
                        .HasColumnType("int");

                    b.Property<int>("classId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("Memberid");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Branch", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("address")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Classroom", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("assignmentId")
                        .HasColumnType("int");

                    b.Property<int>("branchId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("limitedPlace")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("assignmentId");

                    b.HasIndex("branchId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Coach", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("branchId")
                        .HasColumnType("int");

                    b.Property<int>("dni")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("branchId");

                    b.HasIndex("userId");

                    b.ToTable("Coaches", (string)null);
                });

            modelBuilder.Entity("SuMejorPeso.Models.License", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("barcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("endDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("startDate")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.ToTable("Licenses", (string)null);
                });

            modelBuilder.Entity("SuMejorPeso.Models.Member", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly>("birthdate")
                        .HasColumnType("date");

                    b.Property<string>("direction")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("dni")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("licenseId")
                        .HasColumnType("int");

                    b.Property<int?>("membershipId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("licenseId")
                        .IsUnique();

                    b.HasIndex("membershipId")
                        .IsUnique();

                    b.HasIndex("userId");

                    b.ToTable("Members", (string)null);
                });

            modelBuilder.Entity("SuMejorPeso.Models.Membership", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("debt")
                        .HasColumnType("float");

                    b.Property<float>("discount")
                        .HasColumnType("float");

                    b.Property<DateOnly>("endDate")
                        .HasColumnType("date");

                    b.Property<float>("pricePaid")
                        .HasColumnType("float");

                    b.Property<DateOnly>("startDate")
                        .HasColumnType("date");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("typeid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("typeid");

                    b.ToTable("Memberships", (string)null);
                });

            modelBuilder.Entity("SuMejorPeso.Models.Pay", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("memberId")
                        .HasColumnType("int");

                    b.Property<int>("membershipId")
                        .HasColumnType("int");

                    b.Property<string>("paymentMethod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Pay");
                });

            modelBuilder.Entity("SuMejorPeso.Models.ScheduleClassroom", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("classroomId")
                        .HasColumnType("int");

                    b.Property<string>("dayWeek")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeSpan>("endTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("startTime")
                        .HasColumnType("time(6)");

                    b.HasKey("id");

                    b.HasIndex("classroomId");

                    b.ToTable("ScheduleClassrooms", (string)null);
                });

            modelBuilder.Entity("SuMejorPeso.Models.ScheduleCoach", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("coachId")
                        .HasColumnType("int");

                    b.Property<string>("dayWeek")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeSpan>("endTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("startTime")
                        .HasColumnType("time(6)");

                    b.HasKey("id");

                    b.HasIndex("coachId");

                    b.ToTable("ScheduleCoaches", (string)null);
                });

            modelBuilder.Entity("SuMejorPeso.Models.Specialty", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Specialty");
                });

            modelBuilder.Entity("SuMejorPeso.Models.TypeMembreship", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("daysDuration")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("price")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("TypeMembreship");
                });

            modelBuilder.Entity("SuMejorPeso.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("branchId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("lastAccess")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("salt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("branchId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ClassroomCoach", b =>
                {
                    b.HasOne("SuMejorPeso.Models.Classroom", null)
                        .WithMany()
                        .HasForeignKey("classroomsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuMejorPeso.Models.Coach", null)
                        .WithMany()
                        .HasForeignKey("coachesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClassroomMember", b =>
                {
                    b.HasOne("SuMejorPeso.Models.Classroom", null)
                        .WithMany()
                        .HasForeignKey("classroomsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuMejorPeso.Models.Member", null)
                        .WithMany()
                        .HasForeignKey("membersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoachSpecialty", b =>
                {
                    b.HasOne("SuMejorPeso.Models.Coach", null)
                        .WithMany()
                        .HasForeignKey("coachesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuMejorPeso.Models.Specialty", null)
                        .WithMany()
                        .HasForeignKey("specialtiesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuMejorPeso.Models.ActivityRecord", b =>
                {
                    b.HasOne("SuMejorPeso.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Attendance", b =>
                {
                    b.HasOne("SuMejorPeso.Models.Member", null)
                        .WithMany("attendance")
                        .HasForeignKey("Memberid");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Classroom", b =>
                {
                    b.HasOne("SuMejorPeso.Models.Assignment", "assignment")
                        .WithMany()
                        .HasForeignKey("assignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuMejorPeso.Models.Branch", "branch")
                        .WithMany("classrooms")
                        .HasForeignKey("branchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("assignment");

                    b.Navigation("branch");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Coach", b =>
                {
                    b.HasOne("SuMejorPeso.Models.Branch", "branch")
                        .WithMany("coaches")
                        .HasForeignKey("branchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuMejorPeso.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("branch");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Member", b =>
                {
                    b.HasOne("SuMejorPeso.Models.License", "license")
                        .WithOne("member")
                        .HasForeignKey("SuMejorPeso.Models.Member", "licenseId");

                    b.HasOne("SuMejorPeso.Models.Membership", "membership")
                        .WithOne("member")
                        .HasForeignKey("SuMejorPeso.Models.Member", "membershipId");

                    b.HasOne("SuMejorPeso.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("license");

                    b.Navigation("membership");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Membership", b =>
                {
                    b.HasOne("SuMejorPeso.Models.TypeMembreship", "type")
                        .WithMany()
                        .HasForeignKey("typeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("type");
                });

            modelBuilder.Entity("SuMejorPeso.Models.ScheduleClassroom", b =>
                {
                    b.HasOne("SuMejorPeso.Models.Classroom", "classroom")
                        .WithMany("schedule")
                        .HasForeignKey("classroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("classroom");
                });

            modelBuilder.Entity("SuMejorPeso.Models.ScheduleCoach", b =>
                {
                    b.HasOne("SuMejorPeso.Models.Coach", "coach")
                        .WithMany("schedule")
                        .HasForeignKey("coachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("coach");
                });

            modelBuilder.Entity("SuMejorPeso.Models.User", b =>
                {
                    b.HasOne("SuMejorPeso.Models.Branch", "branch")
                        .WithMany("staff")
                        .HasForeignKey("branchId");

                    b.Navigation("branch");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Branch", b =>
                {
                    b.Navigation("classrooms");

                    b.Navigation("coaches");

                    b.Navigation("staff");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Classroom", b =>
                {
                    b.Navigation("schedule");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Coach", b =>
                {
                    b.Navigation("schedule");
                });

            modelBuilder.Entity("SuMejorPeso.Models.License", b =>
                {
                    b.Navigation("member")
                        .IsRequired();
                });

            modelBuilder.Entity("SuMejorPeso.Models.Member", b =>
                {
                    b.Navigation("attendance");
                });

            modelBuilder.Entity("SuMejorPeso.Models.Membership", b =>
                {
                    b.Navigation("member")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
